{
    "compilerOptions": {
        /* Visit https://aka.ms/tsconfig.json to read more about this file */
        /* Basic Options */
        // "incremental": true,                   /* Enable incremental compilation */
        "target": "ESNEXT", /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
        "module": "ESNext", /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
        "lib": [
            "dom",
            "es2015",
            "es2016",
            "es2017.object",
            "es2017",
            "es2018",
            "esnext"
        ], /* Specify library files to be included in the compilation. */
        "allowJs": true, /* Allow javascript files to be compiled. */
        // "checkJs": true,                       /* Report errors in .js files. */
        "jsx": "preserve", /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
        "declaration": false, /* Generates corresponding '.d.ts' file. */
        "declarationMap": false, /* Generates a sourcemap for each corresponding '.d.ts' file. */
        "sourceMap": true, /* Generates corresponding '.map' file. */
        "rootDir": "./", /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
        "removeComments": false, /* Do not emit comments to output. */
        "noEmit": true,                        /* Do not emit outputs. */
        "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
        /* Strict Type-Checking Options */
        "strict": true, /* Enable all strict type-checking options. */
        "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
        "strictNullChecks": true,              /* Enable strict null checks. */
        "moduleResolution": "node", /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        "baseUrl": "./", /* Base directory to resolve non-absolute module names. */
        "paths": {
            "@/*": [
                "src/*"
            ]
        }, /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
        // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
        "typeRoots": [
            "./node_modules/@types"
        ], /* List of folders to include type definitions from. */
        "types": [
            "webpack-env"
        ], /* Type declaration files to be included in compilation. */
        "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
        "esModuleInterop": true, /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
        "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
        "skipLibCheck": true, /* Skip type checking of declaration files. */
        "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file. */
        "preserveConstEnums": true,
        "suppressImplicitAnyIndexErrors": true
    },
    "exclude": [
        "node_modules"
    ],
    "include": [
        "src"
    ],
    "files": [
        "./src/index.d.ts"
    ]
  }